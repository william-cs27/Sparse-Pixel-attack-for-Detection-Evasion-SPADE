# -*- coding: utf-8 -*-
"""YOLO_BDD100K.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r8oQkhMuNmGXE3rmKOdoKBO7nyR0R4kU
"""

# Install required packages
!pip install ultralytics stable-baselines3[extra] opencv-python-headless torch torchvision torchaudio gymnasium shimmy

# Define dataset paths (replace with actual paths)
dataset_path = "/content/drive/MyDrive/Project_RLAB/Dataset/BD100K"  # root folder containing images and labels
train_images_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/images/train"
val_images_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/images/val"
test_images_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/images/test"
train_labels_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/labels/train"
val_labels_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/labels/val"
test_labels_dir = f"{dataset_path}/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/labels/test"

# Write YOLO dataset config YAML for BDD100K
bdd_yaml = """
path: {root}
train: images/train
val: images/val
test: images/test
nc: 10
names: [
  'Car', 'Bus', 'Truck', 'Person', 'Light',
  'Sign', 'Bike', 'Rider', 'Motor', 'Train'
]

""".format(root=dataset_path)

with open("bdd100k.yaml", "w") as f:
    f.write(bdd_yaml)
print("BDD100K YOLO config written.")

from ultralytics import YOLO

# Load pre-trained or fine-tuned model (skip training)
model = YOLO('/content/drive/MyDrive/Project_RLAB/RFPAR/runs/detect/train2/weights/best.pt')  # or 'runs/detect/train/weights/best.pt' if already fine-tuned

# Evaluate on clean validation set (for baseline mAP)

results = model.train(data="/content/bdd100k.yaml", epochs=30, imgsz=640, resume=False )

model = YOLO('/content/drive/MyDrive/Project_RLAB/RFPAR/runs/detect/train2/weights/best.pt')

# Predict on a single image
results = model.predict(
    '/content/drive/MyDrive/Project_RLAB/Dataset/BD100K/images/test/cabf7be1-36a39a28.jpg',
    conf=0.4,    # <-- Only predictions with confidence >= 0.4 will be returned
    show=True
)